5. NoSQL Challenge
1.Find all products in the "Electronics" category that have more than 50 items in stock.
= >  db.products.find({
    category: "Electronics",
    stock_quantity: { $gt: 50 }
});

2. Find the total number of orders placed by a user (given their user_id), including the total amount spent. 
=> db.orders.aggregate([
    {
        $match: { user_id: <given_user_id> }      },
    {
        $group: {
            _id: "$user_id",
            total_orders: { $sum: 1 },
            total_amount_spent: { $sum: "$total_amount" }
        }
    }
]);

3.List all users who have purchased a specific product (given its product_id), including their name and email address.
=> db.users.find({
    user_id: {
        $in: db.orders.find({
            product_ids: <given_product_id>  
        }).map(order => order.user_id)   
    }
}, {
    name: 1,
    email: 1
});

4.Update the stock quantity of a product (given its product_id) after an order is placed, considering the quantity of the product purchased in the order.
=> db.products.updateOne(
    { product_id: <given_product_id> },  // Replace <given_product_id> with actual product_id
    { 
        $inc: { stock_quantity: -<quantity_purchased> } 
    }
);